---
#functional requirements
- summary: |
    Проверка успешной регистрации на сайте с помощью существующей электронной почты 
  requirement: |
    При вводе существующего email и создании корректного пароля и никнэйма пользователь должен быть зарегистрирован системой
  prerequisites: |
    Открыта главная страница https://codebattle.hexlet.io
  test-data: |
    no data
  steps:
    - Перейти на страницу регистрации нажав Sign up
    - Ввести корректный и уникальный Nickname (3-16 символов: латинские буквы, цифры, нижнее подчеркивание)
    - Ввести новый существующий email
    - Ввести корректный Password (6-16 символов) дважды
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь должен попасть на главную страницу
    В правом верхнем углу написан Nickname пользователя

- summary: |
    Проверка невозможности регистрации на сайте с помощью несуществующей электронной почты
  requirement: |
    При вводе вводе несуществующей почты система уведомляет о том, что не удалось найти данный email
  prerequisites: |
    Открыта страница регистрации Sign up: https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    Nickname = Fedy001 email = 29oko@fthcapital.com Пароль = 2121Password=
  steps:
    - Вводим Nickname
    - Вводим email
    - Вводим Password дважды
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь должен увидеть уведомление, что email не корректный или не существует
    Должно происходить подтверждение email
    
- summary: |
    Проверка успешной регистрации на сайте с помощью существующего аккаунта Github 
  requirement: |
    При выборе регистрации с помощью Github система должна зарегистрировать пользователя с существующим аккауном на Github
  prerequisites: |
    Открыта страница регистрации Sign up: https://codebattle.hexlet.io/users/new?locale=en&next=%2F
    Существует аккаунт на Github
  test-data: |
    no data
  steps:
    - Выбрать Sign up with Github
  expected-result: |
    Поcле проверки аккаунта Github пользователь должен попасть на главную страницу сайта 
    В правом верхнем углу написан Nickname пользователя, соответствующий его нику на Github

- summary: |
    Проверка успешной регистрации на сайте с помощью существующего аккаунта Discord
  requirement: |
    При выборе регистрации с помощью Discord система должна зарегистрировать пользователя с существующим аккауном на Github
  prerequisites: |
    Открыта страница регистрации Sign up: https://codebattle.hexlet.io/users/new?locale=en&next=%2F
    Существует аккаунт на Discord
  test-data: |
    no data
  steps:
    - Выбрать Sign up with Discord
    - Нажать авторизоваться в открывшемся окне Discord
  expected-result: |
    Поcле проверки аккаунта Discord пользователь должен попасть на главную страницу сайта 
    В правом верхнем углу написан Nickname пользователя, соответствующий его нику на Discord

- summary: |
    Проверка невозможности регистрации на сайте с помощью Github или Discord  при отсутствии аккаунтов на данных сайтах
  requirement: |
    Система дожна проверять наличие аккаунтов на данных ресурсах
  prerequisites: |
    Открыта страница регистрации Sign up: https://codebattle.hexlet.io/users/new?locale=en&next=%2F
  test-data: |
    no data
  steps:
    - Выбрать Sign up with Github
    - Вернуться на страницу регистрации
    - Выбрать Sign up with Github
  expected-result: |
    Поcле проверки отсутствия аккаунта Github/Discord пользователю должно быть предложенно зарегистрироваться на данных ресурсах

- summary: |
    Проверка успешной авторизации на сайте с помощью существующих email и пароля  
  requirement: |
    При вводе на странице авторизации email и пароль от зарегистрированного профиля 
    пользователь должен войти в ситему 
  prerequisites: |
    Открыта главная страница https://codebattle.hexlet.io
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
    - Перейти на страницу авторизации, нажав Sign in
    - Вводим email
    - Вводим Password 
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь должен попасть на главную страницу
    В правом верхнем углу написан Nickname пользователя - iWriteAnyCode001

- summary: |
    Проверка невозможности авторизации на сайте с помощью несуществующих или некорректных email и/или пароля  
  requirement: |
    При вводе на странице авторизации несуществующих или некорректных email и/или пароль
    пользователь не сможет войти в ситему
  prerequisites: |
    Открыта страница авторизации Sign in: https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    email = rf6r4@fthcapital.com Пароль = 1200Password=
  steps:
    - Вводим любой несуществующий выдуманный email
    - Вводим любой несуществующий выдуманный Password 
    - Нажимаем кнопку "Submit"
    - Вводим  некорректный email = rf6r4@fthcapital.com
    - Вводим  некорректный Password = 1200Password=
    - Нажимаем кнопку "Submit"
  expected-result: |
    Пользователь не должен войти в ситсему
    При вводе несуществующих или некорректных email пользователь должен увидеть надпись EMAIL_NOT_FOUND 
    При вводе несуществующих или некорректных Password пользователь видит надпись INVALID_PASSWORD

- summary: |
    Проверка успешного сохранения количества сыгранных игр
  requirement: |
    На странице профиля должна сохранятся информация о количестве сыгранных игр 
  prerequisites: |
    Открыта главная страница https://codebattle.hexlet.io/#lobby
  test-data: |
    no data
  steps:
    - Нажать в правом верхнем углу на имя профиля или картинку профиля 
    - Выбрать My Profile
    - На странице профиля посмотреть количество сыгранных игр Statistics - games_played
    - Вернуться на главную страницу
    - Создаём и играем 3 игры с ботом, нажав Create a game -  With a bot
    - Заходим в My Profile - Statistics - games_played
  expected-result: |
    Пользователь должен увидеть, что количество игр games_played увеличилось на 3 

- summary: |
    Проверка успешного сохранения истории сыгранных игр
  requirement: |
    На странице профиля должна сохранятся история сыгранных игр 
  prerequisites: |
    Открыта страница профиля My Profile
  test-data: |
    no data
  steps:
    - Нажать на вкладку COMPLETED GAMES
  expected-result: |
    В открывшейся вкладке пользователь должен увидеть историю игр (результаты, соперники, даты игр)

- summary: |
    Проверка успешного отображения и построения рейтинга зарегистрированного пользователя
  requirement: |
    На сайте должен отображаться рейтинг зарегистрированного пользователя, строящийся
    взависимости от полученных за игры с другими пользователями очков
  prerequisites: |
    Открыта главная страница сайта 
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
    - Авторизоваться с помощью email и пароль, указанных в test-data
    - На главной странице в правом верхнем углу под никнеймом iWriteAnyCode001 проверить
      отображение рейтинга и эло-рейтинга
    - Перейти в My Profile
    - Во вкладке Statistics проверить отображение значений рейтинга в rank и elo_rating
    - Выйти на главную страницу сайта 
    - В Lobby навести курсор мыши на никнэйм любого пользователя в таблице
    - Проверить отображение рейтинга выбранного пользователя
    - В таблице LEADERBOARD на главной странице нажать Top list
    - В открывшейся таблице Users rating проверить отображение рейтинга игроков 
      за неделю, месяц и общий рейтинг, выбирая соответсвенно вкладки weekly, monthly, total
    - В строке поиска ввести никнейм iWriteAnyCode001
    - Проверить отображение рейтинга для iWriteAnyCode001
  expected-result: |
    Зарегистрированный пользователь должен увидеть свой рейтинг на главной странице, на странице профиля и в таблице Users rating
    Пользователь должен увидеть рейтинг других игроков в Lobby и в таблице Users rating
    В таблице Users rating отображается рейтинг за неделю, месяц и общий ретинг за всё время
    Шаги тест-кейса отображены на скриншоте Rank

- summary: |
    Проверка возможности просмотра сыгранных игр
  requirement: |
    Завершенная игра должна быть доступна в записи
  prerequisites:
    Авторизован пользователь iWriteAnyCode001
    Открыта страница профиля 
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
    - Открыть вкладку COMPLETED GAMES
    - Выбрать любую игру из списка 
    - Нажать Show
  expected-result: |
    Пользователь должен увидеть запись игры
    Редактор кода при этом выглядит как проигрыватель

- summary: |
    Проверка успешного создания игры с другим пользователем
  requirement: |
    Пользователь должен иметь возможность создания игры с ботом или другим пользователем
  prerequisites:
    Авторизован пользователь iWriteAnyCode001 
    В другом браузере авторизован пользователь iAmYourFriend 
  test-data: |
    iWriteAnyCode001 (email = zf6r4@fthcapital.com Пароль = 2200Password=)
    iAmYourFriend (email = honest306@fthcapital.com Пароль = 2121Password=)
  steps:
    #действия пользователя iWriteAnyCode001:
    - Открыта главная страница https://codebattle.hexlet.io/#lobby
    - Нажать CREATE A GAME 
    - Выбрать Game type - With other user
    - Нажать Create battle
    #действия пользователя iAmYourFriend:
    - Открыта главная страница https://codebattle.hexlet.io/#lobby
    - При появлении в лобби созданной игры с пользователем iWriteAnyCode001 нажать Figth 
  expected-result: |
    Пользователи должны увидеть, что  игра запустилась

- summary: |
    Проверка успешного создания игры с ботом
  requirement: |
    Пользователь должен иметь возможность создания игры с ботом или другим пользователем
  prerequisites:
    Открыта главная страница https://codebattle.hexlet.io/#lobby
    Авторизован пользователь iWriteAnyCode001
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
    - Нажать CREATE A GAME 
    - Выбрать Game type - With a bot
    - Нажать Create battle
  expected-result: |
    Пользователь должен видеть, что игра запустилась

- summary: |
    Проверка успешной работы редактора во время игры
  requirement: |
    Пользователь должен видеть редактор во время игры и может писать в нем код 
  prerequisites:
    Открыта главная страница https://codebattle.hexlet.io/#lobby
    Авторизован пользователь iWriteAnyCode001
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
    - Нажать CREATE A GAME 
    - Выбрать Game type - With a bot
    - Нажать Create battle
    - Нажать ЛКМ на поле редактора, в верхнем углу которго указан наш нинэйм iWriteAnyCode001
    - Ввести любые цифры, буквы, символы, выполнить переход на новую строку 
  expected-result: |
    Пользователь должен увидеть редактор и может писать в нем код
    
- summary: |
    Проверка возможности просмотра кода соперника, времени игры и задания во время игры
  requirement: |
    Пользователь должен видеть во время игры в режиме онлайн код своего соперника, время игры, задание  
  prerequisites:
    Открыта главная страница https://codebattle.hexlet.io/#lobby
    Авторизован пользователь iWriteAnyCode001
    Создана игра с другим пользователем
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
    - Во время игры проверить наличие описания задания игры во вкладке TASK
    - Проверить, что идёт обратный отсчёт времени до конца игры (TIMEOUT IN)
    - Проверить, что видим код оппонента в режиме онлайн 
  expected-result: |
    Пользователь после начала игры видит задание, оставшееся до конца игры время и код соперника 

- summary: |
    Проверка успешного выбора языка программирования 
  requirement: |
    Пользователь может выбирать язык программирования из возможных во время игры  
  prerequisites:
    Открыта главная страница https://codebattle.hexlet.io/#lobby
    Авторизован пользователь iWriteAnyCode001
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
    - Нажать CREATE A GAME 
    - Выбрать Game type - With a bot
    - Нажать Create battle
    - Во время игры открыть список доступных языков (находится слева над редакттором)
    - Выбрать любой язык программирования
    - Проверить, что выбранный язык отображается слева над редактором
    - Снова открыть список языков
    - Сменить язык на другой 
    - Проверить, что выбранный язык отображается слева над редактором
  expected-result: |
    Пользователь должен увидеть выбранный язык над редактором 

- summary: |
    Проверка успешного выбора уровня сложности
  requirement: |
    Пользователь может выбрать уровень сложности
  prerequisites:
    Авторизован пользователь iWriteAnyCode001
    Открыта главная страница https://codebattle.hexlet.io/#lobby
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
    - Нажать CREATE A GAME 
    - Выбрать Game type - With a bot
    - Выбрать один из четырёх уровней сложности в графе Level
    - Убедиться в изменении списка доступных заданий (Choose task by name or tags) при переключении уровней сложности 
  expected-result: |
    Пользователь должен увидеть предлагаемые уровни сложности при создании игры
    В зависимотси от выбранного уровня пользователь должен увидеть список заданий под выбранный уровень сложности 

- summary: |
    Проверка успешного выбора задания из списка заданий
  requirement: |
    Пользователь может выбрать определенное задание из списка при создании игры
  prerequisites:
    Авторизован пользователь iWriteAnyCode001
    Открыта главная страница https://codebattle.hexlet.io/#lobby
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
    - Нажать CREATE A GAME 
    - Выбрать Game type - With a bot
    - Раскрыть список доступных заданий - Choose task by name or tags
    - Выбрать любое задание из списка, запомнив его название
    - Нажать Create battle
    - Во вкладке Task убедиться, что название задания совпадает с выбранным из списка при создании игры
    - Создать еще несколько игр, выбирая разные задания и сравнивая их названия с заданиями в Task во время игры
  expected-result: |
      Пользователь должен увидеть название выбранного задания во вкладке Task
      
- summary: |
    Проверка возможности проверки написанного кода во время игры
  requirement: |
    Пользователь может проверять написанный код неограниченное количество раз во время игры 
  prerequisites:
    Авторизован пользователь iWriteAnyCode001 (email = zf6r4@fthcapital.com Пароль = 2200Password=)
    Открыта главная страница https://codebattle.hexlet.io/#lobby
  test-data: |
    код для проверки:
    const _ = require("lodash");
    const R = require("rambda");

    const solution = (width, length) => {
      return width * length;
    };

    module.exports = solution;
  steps:
    - Нажать CREATE A GAME 
    - Выбрать Game type - With a bot
    - Раскрыть список доступных заданий - Choose task by name or tags
    - Выбрать задание - rect_area
    - Нажать Create battle
    - Выбрать язык программирования - NodeJS
    - Начать вводить код для проверки построчно, после каждой введенной строки нажимая Run
  expected-result: |
    Пользователь после нажатия Run каждый раз должен видеть мигающий редактор и слышать звуковое сопровождение 
    После проверки кода пользователь должен увидеть результат проверки в автоматически открывшейся вкладке OUTPUT

- summary: |
    Проверка успешного создания игры с другом
  requirement: |
    Пользователь должен иметь возможность играть с другом 
  prerequisites:
    Авторизован пользователь iWriteAnyCode001 (email = zf6r4@fthcapital.com Пароль = 2200Password=)
    Открыта главная страница https://codebattle.hexlet.io/#lobby
    В другом браузере авторизован пользователь iAmYourFriend (email = honest306@fthcapital.com Пароль = 2121Password=)
  test-data: |
    no data
  steps:
    - Открыть браузер с пользователем iWriteAnyCode001
    - Нажать CREATE A GAME 
    - Выбрать Game type - With a friend
    - Во вкладке Choose opponent написать iAmYourFriend и выбрать этого пользователя
    - Нажать Create battle
    - Открыть браузер с пользователем iAmYourFriend 
    - В правом верхнем углу нажать на символ скрещенных мечей и красной цифрой 1
    - Выбрать Accept
  expected-result: |
      Пользователь должен увидеть созданную игру с выбранным оппонентом (другим зарегистрированным пользователем)
      
- summary: |
    Проверка возможности общения через чат 
  requirement: |
    Во время игры пользователи могут общаться через чат
  prerequisites:
    Открыта главная страница https://codebattle.hexlet.io/#lobby
    Авторизован пользователь iWriteAnyCode001 (email = zf6r4@fthcapital.com Пароль = 2200Password=)
    В другом браузере авторизован пользователь iAmYourFriend (email = honest306@fthcapital.com Пароль = 2121Password=)
  test-data: |
    no data
  steps:
    - Открыть браузер с пользователем iWriteAnyCode001
    - Нажать CREATE A GAME 
    - Выбрать Game type - With a friend
    - Во вкладке Choose opponent написать iAmYourFriend и выбрать этого пользователя
    - Нажать Create battle
    - Открыть браузер с пользователем iAmYourFriend 
    - В правом верхнем углу нажать на символ скрещенных мечей и красной цифрой 1
    - В поле ввода текста набрать любые буквы, цифры, символы, добавить эмодзи
    - Нажать Send
    - Открыть браузер с пользователем iWriteAnyCode001
    - Проверить чат
  expected-result: |
      Пользователь должен увидеть в чате новое сообщение от другого пользователя 

- summary: |
    Проверка успешного выбора/смены языка описания задания
  requirement: |
    Дожна быть возможность выбора языка текста задания (русский или английский)
  prerequisites:
    Авторизован пользователь iWriteAnyCode001 (email = zf6r4@fthcapital.com Пароль = 2200Password=)
    Открыта главная страница сайта
  test-data: |
    no data
  steps:
    - Нажать CREATE A GAME 
    - Выбрать Game type - With a bot
    - Нажать Create battle
    - Во вкладке Task в правом углу выбрать английиский язык En
    - Убедиться, что текст задания изменился на английский
    - Выбрать русский язык Ru
    - Убедиться, что текст задания изменился на русский
  expected-result: |
      Пользователь при выборе/смене языка должен увидеть, что текст задания становится написанным на выбранном языке
      
- summary: |
    Проверка возможности просмотра хода игры других пользователей
  requirement: |
    Другие пользователи должны иметь возможность следить за ходом игры
  prerequisites:
    Авторизован пользователь iWriteAnyCode001 (email = zf6r4@fthcapital.com Пароль = 2200Password=)
    Открыта главная страница сайта
    В лобби имеется действующая игра других пользователей 
  test-data: |
    no data
  steps:
    - Во вкладке Lobby выбрать в таблице игру других пользователей
    - В правом столбце нажать Show
  expected-result: |
      Пользователь должен увидеть ход игры в режиме онлайн (происходит отсчёт времени, виден процесс написания кода в редакторах соперников)
          
- summary: |
    Проверка успешного начисления очков за игру
  requirement: |
    За завершенные игры должны начисляться и суммироваться очки
  prerequisites:
    Авторизован пользователь iWriteAnyCode001 (email = zf6r4@fthcapital.com Пароль = 2200Password=)
    В другом браузере авторизован пользователь iAmYourFriend (email = honest306@fthcapital.com Пароль = 2121Password=)
    Зафикисрован текущий рейтинг обоих пользователей (рейтинг отображается на главной странице под ником игрока)
    Создана игра между этими пользователями
  test-data: |
    код для проверки:
    const _ = require("lodash");
    const R = require("rambda");

    const solution = (width, length) => {
      return width * length;
    };

    module.exports = solution;
  steps:
    #действия пользователя iWriteAnyCode001:
    - Скопировать код из test-data, вставить в редактор
    - Нажать Run
    - После обьявления победы перейти на главную страницу сайта
    - Зафиксировать текущий рейтинг, отображаемый под ником игрока
    #действия пользователя iAmYourFriend:
    - После обьявления поражения перейти на главную страницу сайта
    - Зафиксировать текущий рейтинг, отображаемый под ником игрока
  expected-result: |
      Пользователь должен увидеть, что в случае победы очки начисляются и рейтинг увеличивается 
      В случае поражения - очки уменьшаются, рейтинг тоже уменьшается

#non-functional requirements
- summary: |
    Проверка успешной работы сайта при стрессовой нагрузке
  requirement: |
    Сайт должен быть способен обрабатывать большое количество трафика 
  prerequisites: |
    Открыта главная страница сайта Gatling в браузере Google Chrome - https://cloud.gatling.io/
  test-data: |
    URL тестируемого сайта https://codebattle.hexlet.io/
  steps: 
    - Открываем инструмент для тестирования Gatling - https://cloud.gatling.io/ (можно войти с помощью аккаунта на Github)
    - Выбираем вкладку "Simulations"
    - Нажать  + Create a simulation
    - В открывшемся окне выбрать Create a simulation withoiut coding
    - Your web site URL - https://codebattle.hexlet.io/
    - В пункте 2 -Setup your injection profile выбираем Stress Test
    - В установке Total test duration - 20 секунд
    - В установке Total injected users - 100 пользователей (максимально возможное)
    - Задать название для симуляции Simulation name - Stress Testing ( можно любое другое )
    - Выбрать Your team - Default team
    - Нажать Save and launch
    - Дождаться завершения теста 
  expected-result: |
    В результатах теста должны отсутствовать ошибки Error ratio - 0%
    Количество запросов = 100 
    Результат теста для сравнения отображен на скринтшоте StressTest

- summary: |
    Проверка успешной работы сайта при высокой нагрузке
  requirement: |
    Сайт должен быть способен обрабатывать большое количество трафика (например, 1000 одновременных пользователей)
  prerequisites: |
    Открыта главная страница сайта Gatling в браузере Google Chrome - https://cloud.gatling.io/
  test-data: |
    URL тестируемого сайта https://codebattle.hexlet.io/
  steps: 
    - Открываем инструмент для тестирования Gatling - https://cloud.gatling.io/ (можно войти с помощью аккаунта на Github)
    - Выбираем вкладку "Simulations"
    - Нажать  + Create a simulation
    - В открывшемся окне выбрать Create a simulation withoiut coding
    - Your web site URL - https://codebattle.hexlet.io/
    - В пункте 2 -Setup your injection profile оставляем по умолчанию Capacity Test
    - В установке Total test duration выбираем максимальные значения для всех позиций
    - Задать любое название для симуляции Simulation name
    - Выбрать Your team - Default team
    - Нажать Save and launch
    - Дождаться завершения теста ( 300 секунд )
  expected-result: |
    В результатах теста должны отсутствовать ошибки
    Общее количество запросов должно быть более 1000
    Результат теста для сравнения отображен скринтшоте GatlingTest

- summary: |
    Проверка успешной оптимизации загрузки с использованием кэширования
  requirement: |
    Сайт должен быть оптимизирован для скорости работы
  prerequisites: |
    Открыта главная страница сайта в браузере Google Chrome
  test-data: |
    URL тестируемого сайта https://codebattle.hexlet.io/
  steps: |
    - Открываем DevTools комбинацией клавиш Shift+Ctrl+I
    - Выбираем вкладку Network
    - Отключить настройку Disable Cache
    - Перезагрузить страницу
  expected-result: |
    В столбце Size должны появиться memory cache или disc cache для большинства файлов

- summary: |
    Проверка успешной работы сайта при низкой скорости соединения
  requirement: |
    Сайт должен загрузиться при низкой скорости без ошибок
  prerequisites: |
    Открыта главная страница сайта в браузере Google Chrome
  test-data: |
    URL тестируемого сайта https://codebattle.hexlet.io/
  steps: 
    - Открываем DevTools комбинацией клавиш Shift+Ctrl+I
    - Выбираем вкладку Network
    - В настройке No throttling выьрать Slow 3G
    - Перезагрузить страницу
  expected-result: |
    Текст должен отобразиться до загрузки изображений
    Отсутствуют ошибки во вкладке Console

- summary: |
    Проверка успешной оптимизации сайта для скорости работы
  requirement: |
    Сайт должен быть оптимизирован для скорости работы
  prerequisites: |
    Отключены антивирусные программы 
    Открыта главная страница сайта в браузере Google Chrome
  test-data: |
    URL тестируемого сайта https://codebattle.hexlet.io/
  steps: 
    - Открываем DevTools комбинацией клавиш Shift+Ctrl+I
    - Выбираем вкладку "Performance insights"
    - Нажать на кнопку "Measure page load"
    - В открывшемся графике найти значение LCP 
    - Зафиксировать полученное значение LCP
  expected-result: |
    Полученное в ходе теста значение LCP не должно превышать оптимальное время загрузки 2.5 секунды 

- summary: |
    Проверка безопасности сайта
  requirement: |
    Сайт должен быть безопасен для пользователя и защищать его данные
  prerequisites: |
    Открыта главная страница сайта в браузере Google Chrome
  test-data: |
    URL тестируемого сайта https://codebattle.hexlet.io/
  steps: 
    - Открываем DevTools комбинацией клавиш Shift+Ctrl+I
    - Выбираем вкладку "Security"
    - В открывшемся окне "Security overview" проверяем, что сайт использует протокол HTTPS
    - В открывшемся окне "Security overview" проверяем, что сертификат безопасности действующий
  expected-result: |
    В окне "Security overview" должны увидеть надписи  This page is secure (valid HTTPS) 
    Сертификат подтвержден и действующий (Sertificate - valid and trusted)
    
- summary: |
    Проверка успешной оптимизации сайта для мобильных устройств
  requirement: |
    Сайт должен иметь версию, оптимизированную для мобильных устройств
  prerequisites: |
    Открыт браузер Google Chrome
    В браузере открыт инструмент Mobile-Friendly Test (https://www.experte.com/mobile-friendly)
  test-data: |
    URL тестируемого сайта https://codebattle.hexlet.io/
  steps:
    - Вводим в строке "Enter URL" - https://codebattle.hexlet.io/
    - Нажать кнопку "Start Test"
  expected-result: |
    Результат теста должен быть - Mobile Friendly 
    Ход теста отражен на скриншоте Mobile Friendly
   
- summary: |
    Проверка успешной кроссбраузерности сайта
  requirement: |
    Сайт должен быть совместим с последними версиями браузеров для Windows и Mac
  prerequisites: |
    Открыт онлайн-сервис BrowserStack (https://live.browserstack.com/)
    Выбрано ручное тестирование Manual Testing
    Выбрано Cross-Browser Testing
  test-data: |
    URL тестируемого сайта https://codebattle.hexlet.io/
    Список браузеров для теста - Edge, Google Chrome, Yandex, Safari, Firefox, Opera, Internet Explorer
  steps:
    - В открывшейся таблице сайтов нажимаем на последнюю версию браузера Edge
    - В открывшемся окне проверяем, что сайт загружается в данной версии браузера 
    - Открыть окно авторизации,затем окно регистрации
    - Открыть случайные товары , проверить страницы товаров
    - Авторизоваться как iWriteAnyCode001 с помощью - email = zf6r4@fthcapital.com Пароль = 2200Password=
    - Открыть страницу профиля, настройки, историю игр
    - Создать игру с ботом
    - Повторить тесты для всех перечисленных браузеров в таблице поочередно
  expected-result: |
    Сайт должен загружаться на всех последних версиях браузеров Edge, Google Chrome, Yandex, Safari, Firefox, Opera, Internet Explorer
    Текст и изображения загружаются на всех страницах сайта, нет ошибок или пустой страницы

- summary: |
    Проверка успешного отображения сайта на мобильных устройствах
  requirement: |
    Сайт должен иметь мобильную версию
  prerequisites: |
    Открыт сайт
    Открыт DevTools 
  test-data: |
    URL тестируемого сайта https://codebattle.hexlet.io/
    Устройства для тестирования - iPhone SE, iPhone 14 Pro Max, Samsung Galaxy A51/71, Galaxy S8, Nokia Lumia 520
  steps:
    - Открыть Device Toolbar Ctrl+Shift+M
    - Выбрать одно из устройств для тестирования
    - Просмотреть главную страницу, открыть вкладки на главной страницы
    - Открыть профиль, вкладки на странице профиля
    - Создать игру с ботом
    - Проверить ототбражение задания, редактора своего и соперника
    - Повторить эти же шаги для остальных устройств из списка - Устройства для тестирования  
  expected-result: |
    Сайт должен отображаться на каждом устройстве, при этом изображения, кнопки и текст не наезжают друг на друга

- summary: |
    Проверка успешной адаптивности сайта на планшетах
  requirement: |
    Сайт должен быть доступен на различных устройствах
  prerequisites: |
    Открыта главная страница сайта в браузере Google Chrome - https://codebattle.hexlet.io/
    Открыт  DevTools
  test-data: |
    Устройства  для проверки - Galaxy Tab S4, iPad Mini, iPad Pro
  steps:
    - Открыть Device Toolbar Ctrl+Shift+M
    - Выбрать одно из устройств для тестирования
    - Просмотреть главную страницу, открыть вкладки на главной страницы
    - Открыть профиль, вкладки на странице профиля
    - Создать игру с ботом
    - Проверить ототбражение задания, редактора своего и соперника
    - Повторить эти же шаги для остальных устройств из списка - Устройства для тестирования  
  expected-result: |
    Сайт должен отображаться на каждом устройстве, при этом изображения, кнопки и текст не наезжают друг на друга

#implicit requirments
- summary: |
    Проверка успешного определения победителя игры
  requirement: |
    Система должна определять победителя и выводить инофрмацию об этом на экран по завершению игры
  prerequisites: |
    Открыта страница авторизации Sign in: https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
   - Войти в систему как пользователь - iWriteAnyCode001 (данные для входа смотри в test-data)
   - Создать игру с ботом или пользователем
   - После запуска игры нажать белый флажок Give up
   - Создать новую игру с ботом или пользователем
   - Завершить игру, написав верный код, или дождаться победы соперника
  expected-result: |
    Система должна уведомлять пользователя о победе или проигрыше по окончанию игры с помощью всплывающего уведомления со звуком 

- summary: |
    Проверка успешного завершения игры до окончания времени
  requirement: |
    Пользователь может покинуть игру до завершения времени - сдаться досрочно
  prerequisites: |
    Открыта страница авторизации Sign in: https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
   - Войти в систему как пользователь - iWriteAnyCode001 (данные для входа смотри в test-data)
   - Создать игру с ботом или пользователем
   - После запуска игры нажать белый флажок Give up
  expected-result: |
    Пользователь должен увидеть уведомление о проигрыше и завершении батла

- summary: |
    Проверка успешного редактирования профайла
  requirement: |
    Пользователь должен иметь возможность открывать и редактировать свой профайл
  prerequisites: |
    Открыта страница авторизации Sign in: https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
   - Войти в систему как пользователь - iWriteAnyCode001 (данные для входа смотри в test-data)
   - Нажать на никнэйм или картинку рядом 
   - В всплывающем меню выбрать Settings
   - В строке Your name удалить iWriteAnyCode001 и написать новый рандомный никнэйм
   - Нажать Save
   - Перезагрузить страницу
  expected-result: |
    Пользователь должен увидеть в правом верхнем углу новый никнэйм

    

