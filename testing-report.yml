---
- summary: |
    Краткое описание тест-кейса. Пример: Проверка входа пользователя с существующими логином и паролем
  status: fail

- summary: |
    Краткое описание тест-кейса. Пример: Проверка входа пользователя с существующими логином и паролем
  status: pass

---
#functional requirements
- summary: |
    Проверка регистрации на сайте с помощью существующей электронной почты 
  status: pass
  
- summary: |
    Проверка регистрации на сайте с помощью несуществующей электронной почты 
  status: pass
    
- summary: |
    Проверка регистрации на сайте с помощью существующего аккаунта Github 
  status: pass
  
- summary: |
    Проверка регистрации на сайте с помощью существующего аккаунта Discord
  status: pass

- summary: |
    Проверка регистрации на сайте с помощью Github или Discord  при отсутствии аккаунтов на данных сайтах
  status: pass

- summary: |
    Проверка авторизации на сайте с помощью существующих email и пароля  
 status: pass

- summary: |
    Проверка авторизации на сайте с помощью несуществующих или некорректных email и/или пароля  
  status: pass

- summary: |
    Проверка сохранения количества сыгранных игр
  status: pass

- summary: |
    Проверка сохранения истории сыгранных игр
 status: pass

- summary: |
    Проверка отображения и построения рейтинга зарегистрированного пользователя
  status: pass
  
- summary: |
    Проверка возможности просмотра сыгранных игр
  status: pass

- summary: |
    Проверка возможности создания игры
 status: pass
 
- summary: |
    Проверка работы редактора во время игры
  status: pass
    
- summary: |
    Проверка возможности просмотра кода соперника, времени игры и задания во время игры
  status: pass

- summary: |
    Проверка возможности выбора языка программирования 
  status: pass

- summary: |
    Проверка возможности выбора уровня сложности
  status: pass

- summary: |
    Проверка возможности выбора задания из списка заданий
  status: pass
      
- summary: |
    Проверка возможности проверки написанного кода во время игры
  status: pass

- summary: |
    Проверка возможности создания игры с другом
 status: pass
      
- summary: |
    Проверка возможности общения через чат 
  status: pass

- summary: |
    Проверка возможности выбора/смены языка описания задания
  status: pass
      
- summary: |
    Проверка возможности просмотра хода игры других пользователей
  status: pass
          
- summary: |
    Проверка реализации начисления очков за игры
  status: pass

#non-functional requirements
- summary: |
    Проверка успешной оптимизации загрузки с использованием кэширования
  status: pass

- summary: |
    Проверка работы при низкой скорости соединения
  status: pass

- summary: |
    Проверка успешной оптимизации сайта для скорости работы
  status: pass
  
- summary: |
    Проверка безопасности сайта
  status: pass
    
- summary: |
    Проверка оптимизации сайта для мобильных устройств
  status: pass
   
- summary: |
    Проверка кроссбраузерности
  status: pass

- summary: |
    Проверка отображения сайта на мобильных устройствах
  requirement: |
    Сайт должен иметь мобильную версию
  prerequisites: |
    Открыт сайт
    Открыт DevTools 
  test-data: |
    URL тестируемого сайта https://codebattle.hexlet.io/
    Устройства для тестирования - iPhone SE, iPhone 14 Pro Max, Samsung Galaxy A51/71, iPad, Asus Zenbook Fold
  steps:
    - Открыть Device Toolbar Ctrl+Shift+M
    - Выбрать одно из устройств для тестирования
    - Просмотреть главную страницу, открыть вкладки на главной страницы
    - Открыть профиль, вкладки на странице профиля
    - Создать игру с ботом
    - Проверить ототбражение задания, редактора своего и соперника
    - Повторить эти же шаги для остальных устройств из списка - Устройства для тестирования  
  expected-result: |
    Сайт должен отображаться на каждом устройстве, при этом изображения, кнопки и текст не наезжают друг на друга

- summary: |
    Проверка адаптивности сайта на планшетах
  requirement: |
    Сайт должен быть доступен на различных устройствах
  prerequisites: |
    Открыта главная страница сайта в браузере Google Chrome - https://codebattle.hexlet.io/
    Открыт  DevTools
  test-data: |
    Устройства  для проверки - Galaxy Tab S4, iPad Mini, iPad Pro
  steps:
    - Открыть Device Toolbar Ctrl+Shift+M
    - Выбрать одно из устройств для тестирования
    - Просмотреть главную страницу, открыть вкладки на главной страницы
    - Открыть профиль, вкладки на странице профиля
    - Создать игру с ботом
    - Проверить ототбражение задания, редактора своего и соперника
    - Повторить эти же шаги для остальных устройств из списка - Устройства для тестирования  
  expected-result: |
    Сайт должен отображаться на каждом устройстве, при этом изображения, кнопки и текст не наезжают друг на друга

- summary: |
    Проверка работы сайта при высокой нагрузке
  requirement: |
    Сайт должен быть способен обрабатывать большое количество трафика (например, 1000 одновременных пользователей)
  prerequisites: |
    Открыта главная страница сайта Gatling в браузере Google Chrome - https://cloud.gatling.io/
  test-data: |
    URL тестируемого сайта https://codebattle.hexlet.io/
  steps: 
    - Открываем инструмент для тестирования Gatling - https://cloud.gatling.io/ (можно войти с помощью аккаунта на Github)
    - Выбираем вкладку "Simulations"
    - Нажать  + Create a simulation
    - В открывшемся окне выбрать Create a simulation withoiut coding
    - Your web site URL - https://codebattle.hexlet.io/
    - В установке Total test duration выбираем максимальные значения для всех позиций
    - Задать любое название для симуляции Simulation name
    - Выбрать Your team - Default team
    - Нажать Save and launch
    - Дождаться завершения теста ( 300 секунд )
  expected-result: |
    В результатах теста должны отсутствовать ошибки
    Количество запросов должно быть не менее 1000 
    Результат теста 

#implicit requirments
- summary: |
    Проверка определения победителя игры
  requirement: |
    Система должна определять победителя и выводить инофрмацию об этом на экран по завершению игры
  prerequisites: |
    Открыта страница авторизации Sign in: https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
   - Войти в систему как пользователь - iWriteAnyCode001 (данные для входа смотри в test-data)
   - Создать игру с ботом или пользователем
   - После запуска игры нажать белый флажок Give up
   - Создать новую игру с ботом или пользователем
   - Завершить игру, написав верный код, или дождаться победы соперника
  expected-result: |
    Система должна уведомлять пользователя о победе или проигрыше по окончанию игры с помощью всплывающего уведомления со звуком 

- summary: |
    Проверка завершения игры до окончания времени
  requirement: |
    Пользователь может покинуть игру до завершения времени - сдаться досрочно
  prerequisites: |
    Открыта страница авторизации Sign in: https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
   - Войти в систему как пользователь - iWriteAnyCode001 (данные для входа смотри в test-data)
   - Создать игру с ботом или пользователем
   - После запуска игры нажать белый флажок Give up
  expected-result: |
    Пользователь должен увидеть уведомление о проигрыше и завершении батла

- summary: |
    Проверка возможности редактирования профайла
  requirement: |
    Пользователь должен иметь возможность открывать и редактировать свой профайл
  prerequisites: |
    Открыта страница авторизации Sign in: https://codebattle.hexlet.io/session/new?locale=en&next=%2F
  test-data: |
    email = zf6r4@fthcapital.com Пароль = 2200Password=
  steps:
   - Войти в систему как пользователь - iWriteAnyCode001 (данные для входа смотри в test-data)
   - Нажать на никнэйм или картинку рядом 
   - В всплывающем меню выбрать Settings
   - В строке Your name удалить iWriteAnyCode001 и написать новый рандомный никнэйм
   - Нажать Save
   - Перезагрузить страницу
  expected-result: |
    Пользователь должен увидеть в правом верхнем углу новый никнэйм

    
